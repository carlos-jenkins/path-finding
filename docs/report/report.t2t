Título del documento
Autores
%%date(%B, %Y)

%!target: tex
%!style(xhtmls): media/themes/Clean/style.css
%!options(tex): --enum-title --toc --toc-level 5
%!nested(tex): --docclass {article} --pdf

%S = Tabla de contenidos =[tabla_de_contenidos]

%Tabla de contenidos
%%toc

%tex% ''\newpage''

= Descripción del problema =[descripcion_del_problema]

Los algoritmos de búsqueda se utilizan constantemente en aplicaciones de IA tales como robótica.
En estos contextos, sin embargo, es importante adaptar dichos algoritmos a un entorno dinámico. 
Es común, por ejemplo, que el agente tenga que responder en un marco de tiempo limitado, que tenga 
que movilizarse físicamente para encontrar las rutas, y que en general se encuentre trabajando en linea. @@
En la presente tarea se describe la implementación de tres algoritmos clásicos de búsqueda:

- Greedy (Best-First-Search).
- A* (A estrella).
- Jump points search.


A continuación se presenta la descripción de la solución (modificaciones al servidor gráfico, funciones 
generales y descripción de los algoritmos de búsqueda) y el análisis de resultados de la implementación.

= Descripción de la solución =[descripcion_de_la_solucion]



== Modificaciones al servidor gráfico ==[modificaciones_al_servidor_grafico]



== Funciones de utilidad general ==[funciones_de_utilidad_general]



== Descripción de algoritmos ==[descripcion_de_algoritmos]



=== Greedy ===[greedy]



=== A* ===[a]



=== Jump Points ===[jump_points]



= Análisis de resultados =[analisis_de_resultados]



= Conclusiones =[conclusiones]



= Referencias =[referencias]

- Harabor D. and Grastien A. (2011). //Online graph pruning for pathfinding on grid maps//. 
  In Proceedings of the 25th National Conference on Artificial Intelligence (AAAI), San Francisco, USA.
- Xueqiao, X. (2011). //A comprehensive path-finding library in javascript//. 
  Retrieved from https://github.com/qiao/PathFinding.js


